============================= test session starts ==============================
platform darwin -- Python 3.8.2, pytest-7.4.0, pluggy-1.2.0
rootdir: /Users/nmitchell/workspace/rascal-debugging-interview
collected 7 items

test_rascal.py ..FFFFF                                                   [100%]

=================================== FAILURES ===================================
___________________________ test_diagnostic_success ____________________________

rid = '50088c58-206b-4e23-b574-2a2803ec4e09'

    def test_diagnostic_success(rid):
        headers = {
            "X-Request-ID": rid,
            "Content-type": "application/x-www-form-urlencoded",
            "Accept": "text/plain"
        }
        diagnostic = requests.get(
            f"{Config.IsopalavialInterface.uri}/diagnostic",
            headers=headers,
        )
>       assert diagnostic.status_code == 202  # Accepted
E       assert 200 == 202
E        +  where 200 = <Response [200]>.status_code

test_rascal.py:50: AssertionError
______________________________ test_cool_success _______________________________

rid = '562c662e-7dbd-4237-aa28-08e33a9b1b55'

    def test_cool_success(rid):
        # Send cool command
        headers = {
            "X-Request-ID": rid,
            "Content-type": "application/x-www-form-urlencoded",
            "Accept": "text/plain"
        }
        cool = requests.put(
            f"{Config.IsopalavialInterface.uri}/cool",
            headers=headers,
        )
>       assert cool.status_code == 200
E       assert 405 == 200
E        +  where 405 = <Response [405]>.status_code

test_rascal.py:69: AssertionError
__________________________ test_warp_and_cool_success __________________________

rid = 'efcc5dc6-564c-46f3-83f3-36ae9c63f8b9'

    def test_warp_and_cool_success(rid):
        # Send warp command
        headers = {
            "X-Request-ID": rid,
            "Content-type": "application/json",
            "Accept": "text/plain"
        }
        warp = requests.put(
            f"{Config.IsopalavialInterface.uri}/warp",
            headers=headers,
            json={"location": "Ni'Var"},
        )
>       assert warp.status_code == 200
E       assert 500 == 200
E        +  where 500 = <Response [500]>.status_code

test_rascal.py:85: AssertionError
_____________________________ test_multiwarp_fail ______________________________

rid = '57c599a4-291c-4c14-baeb-86c551578b36'

    def test_multiwarp_fail(rid):
        # Send warp command
        headers = {
            "X-Request-ID": rid,
            "Content-type": "application/json",
            "Accept": "text/plain"
        }
        warp = requests.put(
            f"{Config.IsopalavialInterface.uri}/warp",
            headers=headers,
            json={"location": "Ni'Var"},
        )
>       assert warp.status_code == 200
E       assert 500 == 200
E        +  where 500 = <Response [500]>.status_code

test_rascal.py:145: AssertionError
___________________________ test_multi_warp_success ____________________________

rid = 'cbfa2d8e-3c12-43e3-a91f-276bdfe7353e'

    def test_multi_warp_success(rid):
        # Send warp command
        headers = {
            "X-Request-ID": rid,
            "Content-type": "application/json",
            "Accept": "text/plain"
        }
        warp = requests.put(
            f"{Config.IsopalavialInterface.uri}/warp",
            headers=headers,
            json={"location": "Ni'Var"},
        )
>       assert warp.status_code == 200
E       assert 500 == 200
E        +  where 500 = <Response [500]>.status_code

test_rascal.py:218: AssertionError
=========================== short test summary info ============================
FAILED test_rascal.py::test_diagnostic_success - assert 200 == 202
FAILED test_rascal.py::test_cool_success - assert 405 == 200
FAILED test_rascal.py::test_warp_and_cool_success - assert 500 == 200
FAILED test_rascal.py::test_multiwarp_fail - assert 500 == 200
FAILED test_rascal.py::test_multi_warp_success - assert 500 == 200
========================= 5 failed, 2 passed in 0.45s ==========================
